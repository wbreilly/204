sd(pop1)
var(pop1)
hist(pop1)
hist(pop2)
hist(pop3)
hist(pop1)
hist(pop2)
hist(pop3)
plot(density(pop1))
plot(density(pop2))
plot(density(pop2))
plot(density(pop3))
hist(pop1, main = "Histogram of Standard Normal Pop",
xlab = "Values", xlim = c(-2, 2), breaks = 200, col = 'slategray')
hist(pop1, main = "Histogram of Standard Normal Pop",
xlab = "Values", xlim = c(-2, 2), breaks = 2000, col = 'slategray')
hist(rnorm(25, 0, 1), main = "Histogram of Standard Normal Pop",
xlab = "Values", xlim = c(-2, 2), breaks = 200, col = 'tomato')
hist(rnorm(25, 0, 1), main = "Histogram of Standard Normal Pop",
xlab = "Values", xlim = c(-2, 2), breaks = 20, col = 'tomato')
hist(rnorm(25, 0, 1), main = "Histogram of Standard Normal Pop",
xlab = "Values", xlim = c(-2, 2), breaks = 10, col = 'cyan')
set.seed(10090)
temp <- rnorm(500, 5, 2.3)
hist(temp)
set.seed(10090)
temp <- rnorm(500, 5, 2.3)
hist(temp, col = 'cyan')
temp2 <- (temp-mean(temp))/sd(temp)
hist(temp2)
temp3 <- scale(temp)[,1]
hist(temp3)
tdat <- data.frame(temp,temp2,temp3)
cor(tdat)
gender <- sample(c("male","female"),10,replace=TRUE)
age <- sample(c(21:30),10,replace=TRUE)
nba <- sample(c("Kings"),10,replace=TRUE)
my.data <- data.frame(gender,age,nba)
my.data
depression <- sample(c("depressed","very depressed","despondent"),10,replace=TRUE)
my.data <- cbind(my.data, depression)
my.data
my.data$newvar <- c(1:10)
my.data$newvar = c(1:10)
my.data
my.data$datemin <- (my.data$age / 2) + 7
my.data$datemax <- (my.data$age - 7) * 2
my.data$daterange <- my.data$datemax - my.data$datemin
my.data
set.seed(10913)
v1 <- rnorm(500, 5, 3.3)
v2 <- rnorm(500, 3.3, .5)
v3 <- sample(c(0,1),500, replace = TRUE)
v4 <- sample(c(1,2,2,3,3,3,4,4,4,4,4,5,5,5,6,6,7),500,replace = TRUE)
d <- data.frame(v1,v2,v3,v4)
v1.mn = mn(v1);
v1.mn = mean(v1);
v1.mn = mean(v1)
v1.med = median(v1)
v1.mn = mean(v1)
v1.med = median(v1)
v1.min = min(v1)
v1.max = max(v1)
v2.mn = mean(v2)
v2.med = median(v2)
v2.min = min(v2)
v2.max = max(v2)
hist(v1)
hist(v2)
hist(v3)
hist(v4)
v1.bsd = b.sd(v1)
v1.usd = u.sd(v1)
v2.bsd = b.sd(v2)
v2.usd = u.sd(v2)
v4.bsd = b.sd(v4)
v4.usd = u.sd(v4)
v3 ==0
v3.zero = v3 ==0
summary(v3.zero)
zv1 = (v1-mean(v1))/sd(v1)
hist(zv1)
zv2 = (v2-mean(v2))/sd(v2)
hist(zv2)
scalev1 <- scale(v1)[,1]
hist(scalev1)
scalev2 = scale(v2)[,1]
hist(scalev2)
HW01Data <- read.csv("~/Downloads/HW01Data.csv")
View(HW01Data)
size(HW01Data)
dimnames(HW01Data)
`dim<-`(HW01Data)
dim<-(HW01Data)
dim
? dim
dim(HW01Data)
class(HW01Data)
class(HW01Data, 2)
? class
wd
getwd
save.image("~/walter/204_stats/9.30.16enviro.RData")
load("/Users/WBR/walter/204_stats/9.30.16enviro.RData")
View(HW01Data)
View(HW01Data)
tapply(HW01Data$age_yr, HW01Data$ed_cmplt, HW01Data$biosex, mean)
tapply(HW01Data$age_yr, HW01Data$ed_cmplt, mean)
females = filter(HW01Data$biosex == "FEMALE")
? filter
? dplyr
females = HW01Data[HW01Data$biosex == "FEMALE"]
females = HW01Data[:,HW01Data$biosex == "FEMALE"]
females = subset(HW01Data, HW01Data$biosex == "FEMALE")
View(females)
View(females)
males = subset(HW01Data, HW01Data$biosex == "MALE")
fe.age.ed = tapply(females$age_yr, females$ed_cmplt, mean)
fe.age.ed
ma.age.ed = tapply(males$age_yr, males$ed_cmplt, mean)
ma.age.ed
?table
sex.age.ed = cbind(fe.age.ed,ma.age.ed)
sex.age.ed
table(sex.age.ed)
as.table(sex.age.ed)
> load("/Users/WBR/walter/204_stats/9.30.16enviro.RData")
> View(HW01Data)
> View(HW01Data)
> tapply(HW01Data$age_yr, HW01Data$ed_cmplt, HW01Data$biosex, mean)
Error in match.fun(FUN) :
'HW01Data$biosex' is not a function, character or symbol
>
> tapply(HW01Data$age_yr, HW01Data$ed_cmplt, mean)
College2YR College4YR         HS         MA        PhD
20.01176   23.14118   24.80256   25.10182   29.83784
>
> females = filter(HW01Data$biosex == "FEMALE")
Error in filter(HW01Data$biosex == "FEMALE") :
argument "filter" is missing, with no default
> ? filter
> ? dplyr
No documentation for ‘dplyr’ in specified packages and libraries:
you could try ‘??dplyr’
> females = HW01Data[HW01Data$biosex == "FEMALE"]
Error in `[.data.frame`(HW01Data, HW01Data$biosex == "FEMALE") :
undefined columns selected
> females = HW01Data[:,HW01Data$biosex == "FEMALE"]
Error: unexpected ':' in "females = HW01Data[:"
> females = subset(HW01Data, HW01Data$biosex == "FEMALE")
> View(females)
> View(females)
> males = subset(HW01Data, HW01Data$biosex == "MALE")
> fe.age.ed = tapply(females$age_yr, females$ed_cmplt, mean)
> fe.age.ed
College2YR College4YR         HS         MA        PhD
19.97895   23.08378   25.63333   25.06486   30.01765
> ma.age.ed = tapply(males$age_yr, males$ed_cmplt, mean)
> ma.age.ed
College2YR College4YR         HS         MA        PhD
20.03125   23.29286   24.55333   25.17778   29.68500
> ?table
> sex.age.ed = cbind(fe.age.ed,ma.age.ed)
> sex.age.ed
fe.age.ed ma.age.ed
College2YR  19.97895  20.03125
College4YR  23.08378  23.29286
HS          25.63333  24.55333
MA          25.06486  25.17778
PhD         30.01765  29.68500
> table(sex.age.ed)
sex.age.ed
19.9789473684211         20.03125 23.0837837837838 23.2928571428571 24.5533333333333
1                1                1                1                1
25.0648648648649 25.1777777777778 25.6333333333333           29.685 30.0176470588235
1                1                1                1                1
> as.table(sex.age.ed)
fe.age.ed ma.age.ed
College2YR  19.97895  20.03125
College4YR  23.08378  23.29286
HS          25.63333  24.55333
MA          25.06486  25.17778
PhD         30.01765  29.68500
clc
HW01Data[ , "BMI"] <- HW01Data
HW01Data$BMI = zeros
HW01Data$BMI = 0
view(HW01Data)
View(HW01Data)
View(HW01Data)
? sapply
HW01Data$BMI = sapply(HW01Data, ((HW01Data$weight_lbs / (HW01Data$height_in^2))*703))
View(b.sd)
edit
calc.bmi = function(weight,height)
{
bmi = weight / height^2 * 703
return(bmi)
}
HW01Data$BMI = sapply(HW01Data, calc.bmi(HW01Data$weight_lbs,HW01Data$height_in))
View(HW01Data)
View(HW01Data)
HW01Data$BMI = sapply(HW01Data, calc.bmi(weight_lbs,height_in))
HW01Data$BMI = sapply(HW01Data, calc.bmi,weight_lbs,height_in)
HW01Data$BMI = sapply(HW01Data, calc.bmi,HW01Data$weight_lbs,HW01Data$height_in)
View(HW01Data)
View(HW01Data)
HW01Data[,"BMI"]  = sapply(HW01Data, calc.bmi,HW01Data$weight_lbs,HW01Data$height_in)
HW01Data[,"BMI"]  = sapply(HW01Data, calc.bmi,HW01Data$weight_lbs,HW01Data$height_in, simplify = F)
HW01Data[,"BMI"]  = sapply(HW01Data, calc.bmi,HW01Data$weight_lbs HW01Data$height_in, simplify = F)
HW01Data[,"BMI"]  = sapply(HW01Data, calc.bmi,HW01Data$weight_lbs HW01Data$height_in, simplify = F)
HW01Data[,"BMI"]  = sapply(HW01Data, calc.bmi,HW01Data$weight_lbs... HW01Data$height_in, simplify = F)
HW01Data[,"BMI"]  = sapply(HW01Data, calc.bmi, weight_lbs, height_in, simplify = F)
load("~/walter/204_stats/lab05_Fall2016.R")
cneg <- rep(c(1,0,0), each = 20)
cpos <- rep(c(0,1,0), each = 20)
set.seed(1023)
score <- 5 + 1.5*cpos + -1.3*cneg + rnorm(60, 0, 2)
condition <- rep(c("Negative","Positive","Control"), each = 20)
d <- data.frame(score,condition,cneg,cpos)
by(d$score,d$condition,mean)
View(d)
View(d)
lm(score ~ condition)
aov(score ~ condition)
anova(lm(score ~ condition))
summary(aov(score ~ condition))
summary(lm(score ~ condition))
#Note that summary of the lm() object
by(d$score, d$condition, mean)
d$c1 <- 0; d$c2 <- 0
d[which(d$condition == "Control"),"c1"] <- 1
d[which(d$condition == "Negative"),"c1"] <- -1
d[which(d$condition == "Control"),"c2"] <- -.5
d[which(d$condition == "Negative"),"c2"] <- -.5
d[which(d$condition == "Positive"),"c2"] <- 1
d$c1
d$c2
summary(aov(score ~ c1 + c2, data = d))
anova(lm(score ~ c1 + c2, data = d))
anova(lm(score ~ condition, data = d))
anova(lm(score ~ c1 + c2, data = d))
anova(lm(score ~ condition, data = d))[1,2]
sum(anova(lm(score ~ c1 + c2, data = d))[1:2,2])
tempm <- by(d$score, d$condition, mean)
install.packages('gplots')
library(gplots)
#To plot means with confidence intervals
plotmeans(d$score ~ d$condition, xlab = 'Condition',
ylab = 'Score', main = "Condition Effects on Score",
barcol = 'black', connect = FALSE, n.label = FALSE,
pch = c(16, 17, 18))
abline(h = mean(tempm[1]), lty = 5, col = 'red')
abline(h = mean(tempm[2]), lty = 5, col = 'red')
abline(h = mean(tempm[3]), lty = 5, col = 'red')
nditioning avoidance by pairing neutral stimulus with stressful stimulus
rat <- rep(c(1,0,0,0), each = 30)
moth <- rep(c(0,1,0,0), each = 30)
germ <- rep(c(0,0,1,0), each = 30)
stimulus <- rep(c("rat","moth","germ","control"), each = 30)
time <- 60 - 45*rat + -15*moth + -30*germ + rnorm(120,0,2)
d2 <- data.frame(time,stimulus,rat,moth,germ)
head(d2)
cneg <- rep(c(1,0,0), each = 20)
cpos <- rep(c(0,1,0), each = 20)
set.seed(1023)
score <- 5 + 1.5*cpos + -1.3*cneg + rnorm(60, 0, 2)
condition <- rep(c("Negative","Positive","Control"), each = 20)
d <- data.frame(score,condition,cneg,cpos)
by(d$score,d$condition,mean)
mod1 <- aov(score ~ condition, data = d)
TukeyHSD(mod1)
mod1 <- aov(score ~ condition, data = d)
TukeyHSD(mod1)
pairwise.t.test(d$score, d$condition,
p.adjust.method = c("bonferroni"))
pairwise.t.test(d$score, d$condition,
p.adjust.method = c("none"))
pairwise.t.test(d$score, d$condition,
p.adjust.method = c("holm"))
install.packages("car")
library(car)
set.seed(1113)
female <- rep(c(0,1), each = 50)
drug1 <- drug2 <- rep(0, 100)
drug1;drug2
drug1[sample(1:100, 33, replace = FALSE)] <- 1
drug1
drug2[sample(which(drug1 == 0), 33, replace = FALSE)] <- 1
drug2
dose <- rep("P", 100)
dose[which(drug1 == 1)] <- "D1"
dose[which(drug2 == 1)] <- "D2"
a1c <- 12 - 2*drug1 - 7*drug2 - 2*female -3*drug1*female +
5.5*drug2*female + rnorm(100,0,3)
d = data.frame(a1c, female, dose)
by(d$a1c, d$dose, mean)
by(d$a1c, d$female, mean)
by(d$a1c, list(d$dose, d$female), mean)
anova(lm(d$a1c ~ d$dose))
anova(lm(d$a1c ~ d$female))
anova(lm(d$a1c ~ d$female + d$dose))
anova(lm(d$a1c ~ d$female + d$dose + d$female*d$dose))
d %>%
anova(lm(a1c ~ female + dose + female*dose))
library(tidyverse)
d %>%
anova(lm(a1c ~ female + dose + female*dose))
anova(d %>% lm(a1c ~ female + dose + female*dose))
anova(lm(d$a1c ~ d$female*d$dose))
anova(lm(d$a1c ~ d$dose*d$female))
library(car)
Anova(lm(d$a1c ~ d$female*d$dose), type = c(2))
anova(lm(a1cf ~ dosef))
a1cf <- d$a1c[which(d$female == 1)]
dosef <- d$dose[which(d$female == 1)]
a1cm <- d$a1c[which(d$female == 0)]
dosem <- d$dose[which(d$female == 0)]
#females
anova(lm(a1cf ~ dosef))
#males
anova(lm(a1cm ~ dosem))
pairwise.t.test(a1cf, dosef, p.adjust = c("bonf"))
by(a1cf, dosef, mean)
pairwise.t.test(a1cm, dosem, p.adjust=c("bonf"))
by(a1cm, dosem, mean)
Sex = factor(d$female)
interaction.plot(factor(d$dose), Sex, d$a1c,
type = 'b', leg.bty = "o", leg.bg = "gray", lwd = 2,
pch = c(18, 24), xlab = 'Dose', ylab = 'A1C Score',
main = 'Interaction Plot of Dose*Sex')
library(tidyverse)
setwd("walter/204_stats")
data = read.csv("hw06data.csv")
d = data.frame(data)
View(d)
d %>%
group_by(d,biosex,workout) %>%
summarize(d)
d %>%
group_by(biosex,workout) %>%
summarize(d)
d %>%
group_by("biosex","workout") %>%
summarize(d)
d %>%
group_by("biosex","workout")
d %>%
group_by("biosex") %>%
group_by("workout") %>%
summarize(d)
d %>%
group_by("biosex") %>%
group_by("workout")
d %>%
group_by("biosex" "workout") %>%
summarize(d)
d %>%
group_by("biosex", "workout") %>%
summarize(d)
d %>%
group_by("biosex", "workout") %>%
summary(d)
d %>%
group_by("biosex", "workout")
d %>%
group_by(biosex, workout)
d %>%
group_by(biosex, workout) %>%
summary(d)
d %>%
group_by(biosex, workout) %>%
summarize(d)
d %>%
group_by(biosex, workout)
summarize(d)
d %>%
group_by(biosex, workout)
summary(d)
d %>%
group_by(biosex, workout)
summarize(d)
d %>%
group_by(biosex, workout)
summarise(d)
ungroup(d)
d %>%
group_by(biosex, workout)
summarise(d)
ungroup(d)
d %>%
group_by(biosex, workout)
summary(d)
ungroup(d)
d %>%
group_by(biosex, workout) %>%
summary(d)
ungroup(d)
d %>%
group_by(biosex, workout) %>%
summarise(d)
ungroup(d)
d %>%
group_by(biosex, workout) %>%
summarise()
ungroup(d)
d %>%
group_by(biosex, workout) %>%
summarise()
ungroup(d)
d %>%
group_by(biosex, workout) %>%
count()
d %>%
group_by(biosex, workout) %>%
count() %>%
sum(c[1,:3],c[3,3])
d %>%
group_by(biosex, workout) %>%
count() %>%
sum(c[1,3],c[3,3])
d %>%
group_by(biosex, workout) %>%
summary() %>%
0
d %>%
group_by(biosex, workout) %>%
summary()
# count n by factor combinations
d %>%
group_by(biosex, workout) %>%
summarize()
d %>%
group_by(biosex, workout) %>%
summarize_all()
d %>%
group_by(biosex, workout) %>%
summarize(pctgain)
d %>%
group_by(biosex, workout) %>%
count()
ungroup(d);
summaise(d)
summarise(d)
class(d)
size(d)
summarize(d)
summary(d)
d %>%
by(biosex, workout, mean)
d %>%
group_by(biosex, workout) %>%
summarise(funs(mean))
d %>%
group_by(biosex, workout) %>%
summarise(avg = funs(mean))
d %>%
group_by(biosex, workout) %>%
summarise(pctgain, funs(mean))
ungroup(d)
by(d$biosex, d$workout, mean)
by(d$pctgain,d$biosex, d$workout, mean)
by(d$pctgain,d$biosex, d$workout, "mean")
by(d$pctgain,d$biosex,  mean)
by(d$pctgain,d$biosex,  mean, sd)
by(d$pctgain,d$biosex,  mean, std)
anova(lm(d$pctgain ~ d$biosex + d$workout))
lm(d$pctgain ~ d$biosex + d$workout)
by(d$pctgain,list(d$biosex,d$workout),mean)
by(d$pctgain,list(d$biosex,d$workout),mean,sd)
sds = by(d$pctgain,list(d$biosex,d$workout),sd)
sds = data.frame(by(d$pctgain,list(d$biosex,d$workout),sd))
data_frame(sds)
data.frame(sds)
by(d$pctgain,list(d$biosex,d$workout),sd)
d %.% group_by(biosex, workout) %.%
summarise(mean=mean(value), sd=sd(value))
library(tidyverse)
d %.% group_by(biosex, workout) %.%
summarise(mean=mean(value), sd=sd(value))
d %.% group_by(biosex, workout) %.%
summarise(mean=mean(value), sd=sd(value))
library()
library(dplyr)
d %.% group_by(biosex, workout) %.%
summarise(mean=mean(value), sd=sd(value))
summarise(group_by(d, biosex, workout),
mean=mean(value), sd=sd(value))
summarise(group_by(d, biosex, workout),
mean=mean(pctgain), sd=sd(pctgain))
summarise(group_by(d, biosex),
mean=mean(pctgain), sd=sd(pctgain))
summarise(d, mean=mean(pctgain), sd=sd(pctgain))
sums = summarise(d, mean=mean(pctgain), sd=sd(pctgain))
View(sums)
View(sums)
sums = sums[summarise(group_by(d, biosex),
mean=mean(pctgain), sd=sd(pctgain))]
sums1 = summarise(d, mean=mean(pctgain), sd=sd(pctgain))
sums2 = summarise(group_by(d, biosex),
mean=mean(pctgain), sd=sd(pctgain))
sum3 = summarise(group_by(d, biosex, workout),
mean=mean(pctgain), sd=sd(pctgain))
rbind(sums1, sums2,sums3)
sums3 = sum3
rbind(sums1, sums2,sums3)
View(sums1)
View(sums2)
View(sums3)
anova(lm(d$pctgain ~ d$biosex + d$workout))
anova(lm(d$prctgain ~ d$biosex + d$workout + d$biosex*d$workout))
anova(lm(d$pctgain ~ d$biosex + d$workout + d$biosex*d$workout))
