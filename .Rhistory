`11_10_16_master_data` <- read.table("~/drive/ASBI.davis/Walter.ASBI/DataAnalysis/11_10_16_master_data.xlsx", header=TRUE, quote="\"")
View(`11_10_16_master_data`)
`11_10_16_master_data_r` <- read.csv("~/walter/asbi.rstats/11_10_16_master_data_r.csv", header=FALSE)
View(`11_10_16_master_data_r`)
asbi = 11`11_10_16_master_data_r`
asbi = 11_10_16_master_data_r
View(`11_10_16_master_data_r`)
View(`11_10_16_master_data_r`)
View(`11_10_16_master_data_r`)
asbi <- read.csv("~/walter/asbi.rstats/11.10.16.master.data.csv", header=FALSE)
View(asbi)
asbi <- read.csv("~/walter/asbi.rstats/11.10.16.master.data.csv", header=FALSE)
View(asbi)
asbi <- read.csv("~/walter/asbi.rstats/11.10.16.master.data.csv", header=TRUE)
View(asbi)
View(asbi)
names(asbi) <- c("S", "EDhits", "EDFa", "StroopMn", "StroopMd","FlankMn",
"FLankMd", "GK", "MMCB","Analogy", "Ravens", "RemoteAss","Vocab")
lm(forumla = MMCB ~ Analogy + Ravens + RemoteAss + Vocab + GK + FlankMd +
StroopMd ,data = asbi)
lm(forumla = MMCB ~ Analogy + Ravens + RemoteAss + Vocab  + FlankMd +
StroopMd ,data = asbi)
? na.exclude
? na.action
lm(forumla = MMCB ~ Analogy + Ravens + RemoteAss + Vocab  + FlankMd +
StroopMd ,data = asbi, na.omit = TRUE)
library(tidyverse)
asbi %>%
lm(forumla = MMCB ~ Analogy + Ravens + RemoteAss + Vocab + GK + FlankMd +
StroopMd)
options("na.action")
asbi %>%
lm(MMCB ~ Analogy + Ravens + RemoteAss + Vocab + GK + FlankMd +
StroopMd)
asbi %>%
lm(MMCB ~ Analogy + Ravens + RemoteAss + Vocab + GK + FlankMd +
StroopMd, data = asbi)
lm(asbi$MMCB ~ asbi$Analogy + asbi$Ravens + asbi$RemoteAss + asbi$Vocab + asbi$GK + asbi$FlankMd +
asbi$StroopMd)
lm(asbi$MMCB ~ asbi$Analogy + asbi$Ravens + asbi$RemoteAss + asbi$Vocab + asbi$GK + asbi$FlankMd +
asbi$StroopMd, na.action = na.omit)
View(asbi)
View(asbi)
which(asbi)
class asbi
class(asbo)
class(asbi)
class(asbi$FlankMd)
names(asbi) <- c("S", "EDhits", "EDFa", "StroopMn", "StroopMd","FlankMn",
"FlankMd", "GK", "MMCB","Analogy", "Ravens", "RemoteAss","Vocab")
lm(asbi$MMCB ~ asbi$Analogy + asbi$Ravens + asbi$RemoteAss + asbi$Vocab + asbi$GK + asbi$FlankMd +
asbi$StroopMd)
asbi %>%
lm(MMCB ~ Analogy + Ravens + RemoteAss + Vocab + GK + FlankMd +
StroopMd)
mod = asbi %>% lm(MMCB ~ Analogy + Ravens + RemoteAss + Vocab + GK + FlankMd +
StroopMd)
packages
library(diplyr)
library(dplyr)
mod = asbi %>% lm(MMCB ~ Analogy + Ravens + RemoteAss + Vocab + GK + FlankMd +
StroopMd)
asbi %>% lm(MMCB ~ Analogy + Ravens + RemoteAss + Vocab + GK + FlankMd +
StroopMd)
asbi %.% lm(MMCB ~ Analogy + Ravens + RemoteAss + Vocab + GK + FlankMd +
StroopMd)
asbi %>% lm(MMCB ~ Analogy + Ravens + RemoteAss + Vocab + GK + FlankMd +
StroopMd,.)
asbi %>% lm(MMCB ~ Analogy + Ravens + RemoteAss + Vocab + GK + FlankMd +
StroopMd, .) %>%
summarise
asbi %>% lm(MMCB ~ Analogy + Ravens + RemoteAss + Vocab + GK + FlankMd +
StroopMd, .) %>%
summarize
asbi %>% lm(MMCB ~ Analogy + Ravens + RemoteAss + Vocab + GK + FlankMd +
StroopMd, .) %>%
summarize()
asbi %>% lm(MMCB ~ Analogy + Ravens + RemoteAss + Vocab + GK + FlankMd +
StroopMd, .) %>%
summary
confidence <- read.csv("~/walter/204/confidence.csv", header=FALSE)
View(confidence)
class confidence
class("confidence")
df = data.frame(confidence)
class(df)
View(df)
d <- read.csv("~/walter/204/confidence.csv")
View(d)
class(d)
rm(df)
rm(confidence)
library(tidyverse)
pwd
pwd()
getwd()
setwd(/Users/wbr/walter/204)
setwd("/Users/wbr/walter/204")
getwd()
ls
mutate(d, Subject = [1:100])
mutate(d, Subject = 1:100)
# format long
dlong<-reshape(d,                   #1. input wide data
varying=c("t1","t2","t3"),  #2. specify time varying variables that will be collapsed into one variable
ed="public",               #3. name of the new long variable
timevar="obs",                   #4. name of the new time identifying variable
times=c("t1","t2","t3"),    #5. values to populate the timevar column
direction="long")                #6. direction, can also specify "wide" if going other direction
head(dlong)
# format long
dlong<-reshape(d,                   #1. input wide data
varying=c("t1","t2","t3"),  #2. specify time varying variables that will be collapsed into one variable
v.names="public",               #3. name of the new long variable
timevar="obs",                   #4. name of the new time identifying variable
times=c("t1","t2","t3"),    #5. values to populate the timevar column
direction="long")                #6. direction, can also specify "wide" if going other direction
head(dlong)
View(dlong)
View(dlong)
? v.names
?? v.names
dlong<-reshape(d,                   #1. input wide data
varying=c("t1","t2","t3"),  #2. specify time varying variables that will be collapsed into one variable
#v.names = "public",               #3. name of the new long variable
timevar="obs",                   #4. name of the new time identifying variable
times=c("t1","t2","t3"),    #5. values to populate the timevar column
direction="long")                #6. direction, can also specify "wide" if going other direction
head(dlong)
dlong<-reshape(d,                   #1. input wide data
varying=c("t1","t2","t3"),  #2. specify time varying variables that will be collapsed into one variable
idvar = "public",               #3. name of the new long variable
timevar="obs",                   #4. name of the new time identifying variable
times=c("t1","t2","t3"),    #5. values to populate the timevar column
direction="long")                #6. direction, can also specify "wide" if going other direction
head(dlong)
#4 occasions.
glucp1 <- rnorm(50,160,10) #glucose for placebo group at time 1
glucd1 <- rnorm(50,160,10) #glucose for drug group at time 1
glucp2 <- glucp1 + rnorm(50,0,5)
glucp3 <- glucp2 + rnorm(50,0,5)
glucp4 <- glucp3 + rnorm(50,0,5)
glucd2 <- glucd1 - 30 + rnorm(50,0,5)
glucd3 <- glucd2 - 15 + rnorm(50,0,5)
glucd4 <- glucd3 + rnorm(50,0,5)
drug <- rep(c(0,1), each = 50) #create dummy variable for placebo versus drug group
t1 <- c(glucp1,glucd1) #group by time
t2 <- c(glucp2,glucd2)
t3 <- c(glucp3,glucd3)
t4 <- c(glucp4,glucd4)
gwide <- data.frame(drug, t1, t2, t3, t4)
head(gwide)
tail(gwide)
###############################
####Going from Wide to Long####
###############################
##Create id variable/add to wide data##
id <- (1:100)
gwide <- cbind(id, gwide)
head(gwide)
##We will use the reshape() function to change the form of the data
##to prepare the data for RM ANOVA
#Arguments
melt<-reshape(gwide,                   #1. input wide data
varying=c("t1","t2","t3","t4"),  #2. specify time varying variables that will be collapsed into one variable
v.names="glucose",               #3. name of the new long variable
timevar="obs",                   #4. name of the new time identifying variable
times=c("t1","t2","t3","t4"),    #5. values to populate the timevar column
direction="long")                #6. direction, can also specify "wide" if going other direction
head(melt)
View(gwide)
View(gwide)
View(melt)
View(melt)
dlong<-reshape(d,                   #1. input wide data
varying=c("t1","t2","t3"),  #2. specify time varying variables that will be collapsed into one variable
#idvar = "public",               #3. name of the new long variable
timevar="obs",                   #4. name of the new time identifying variable
times=c("t1","t2","t3"),    #5. values to populate the timevar column
direction="long")                #6. direction, can also specify "wide" if going other direction
head(dlong)
rm(dlong)
dlong<-reshape(d,                   #1. input wide data
varying=c("t1","t2","t3"),  #2. specify time varying variables that will be collapsed into one variable
#idvar = "public",               #3. name of the new long variable
timevar="obs",                   #4. name of the new time identifying variable
times=c("t1","t2","t3"),    #5. values to populate the timevar column
direction="long")                #6. direction, can also specify "wide" if going other direction
head(dlong)
dlong<-reshape(d,                   #1. input wide data
varying=c("t1","t2","t3"),  #2. specify time varying variables that will be collapsed into one variable
v.names = "confidence"               #3. name of the new long variable
timevar="obs",                   #4. name of the new time identifying variable
times=c("t1","t2","t3"),    #5. values to populate the timevar column
direction="long")                #6. direction, can also specify "wide" if going other direction
head(dlong)
dlong<-reshape(d,                   #1. input wide data
varying=c("t1","t2","t3"),  #2. specify time varying variables that will be collapsed into one variable
v.names = "confidence"               #3. name of the new long variable
timevar="obs"                   #4. name of the new time identifying variable
times=c("t1","t2","t3"),    #5. values to populate the timevar column
direction="long")                #6. direction, can also specify "wide" if going other direction
head(dlong)
# format long
dlong<-reshape(d,                   #1. input wide data
varying=c("t1","t2","t3"),  #2. specify time varying variables that will be collapsed into one variable
v.names = "confidence",               #3. name of the new long variable
timevar="obs",                   #4. name of the new time identifying variable
times=c("t1","t2","t3"),    #5. values to populate the timevar column
direction="long")                #6. direction, can also specify "wide" if going other direction
head(dlong)
tail(dlong)
time <- rep(c(0.5,1.5,2.5,3.5), 100)
group_by(dlong, id)
group_by(dlong, "id")
# format long
dlong<-reshape(d,                   #1. input wide data
varying=c("t1","t2","t3"),  #2. specify time varying variables that will be collapsed into one variable
v.names = "confidence",               #3. name of the new long variable
timevar="obs",                   #4. name of the new time identifying variable
times=c("t1","t2","t3"),    #5. values to populate the timevar column
direction="long")                #6. direction, can also specify "wide" if going other direction
View(dlong)
dlong %>% group_by(id)
dlong<-dlong[order(dlong$id),]
time <- rep(c(0.5,1.5,2.5,3.5), 100)
dlong = mutate(dlong, time)
dlong = mutate(dlong, time=time)
dlong = cbind(dlong,time)
time <- rep(c(0.5,1.5,2.5), 100)
dlong = mutate(dlong,time)
summary(aov(confidnece ~ public + Error(id), data = dlong))
summary(aov(confidence ~ public + Error(id), data = dlong))
